#jdbc configuration
jdbc.ip=localhost
jdbc.port=3306
jdbc.databasename=demo
jdbc.username=demo
jdbc.password=demo
#文件上传路径
file.path=/home/file/


#server
server.port=8088
server.context-path=/demo/
#深层原理是使用了两个ClassLoader,一个Classloader加载那些不会改变的类（第三方Jar包）,
#另一个ClassLoader加载会更改的类,称为restart ClassLoader,这样在有代码更改的时候,
#原来的restart ClassLoader 被丢弃,重新创建一个restart ClassLoader,
#由于需要加载的类相比较少,所以实现了较快的重启时间
#热部署开关
spring.devtools.restart.enabled=true
#排除:classpath目录下的WEB-INF文件夹内容修改不重启
spring.devtools.restart.exclude=WEB-INF/**
#设置重启的目录
spring.devtools.restart.additional-paths=src/main/java
#druid datasource
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://${jdbc.ip}:${jdbc.port}/${jdbc.databasename}?useUnicode=true&characterEncoding=utf8
spring.datasource.druid.username=${jdbc.username}
spring.datasource.druid.password=${jdbc.password}

#下面为连接池的补充设置，应用到上面所有数据源中
#初始化大小，最小，最大
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
#配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
#打开pscache，并且指定每个连接上pscache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
#通过connectproperties属性来打开mergesql功能；慢sql记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.datasource.druid.useGlobalDataSourceStat=true

#mybatis
mybatis-plus.mapper-locations=classpath:/mapper/*Mapper.xml
#实体扫描，多个package用逗号或者分号分隔
mybatis-plus.typeAliasesPackage=com.ultra.dao.entity

#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mybatis-plus.global-config.id-type=2
#字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
mybatis-plus.global-config.field-strategy=2
#驼峰下划线转换
mybatis-plus.global-config.db-column-underline=true
#刷新mapper 调试神器
mybatis-plus.global-config.refresh-mapper=true
#数据库大写下划线转换
#capital-mode: true
#序列接口实现类配置,不在推荐使用此方式进行配置,请使用自定义bean注入
#key-generator: com.baomidou.mybatisplus.incrementer.H2KeyGenerator
#逻辑删除配置（下面3个配置）
mybatis-plus.global-config.logic-delete-value=0
mybatis-plus.global-config.logic-not-delete-value=1
#自定义sql注入器,不在推荐使用此方式进行配置,请使用自定义bean注入
#sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
#自定义填充策略接口实现,不在推荐使用此方式进行配置,请使用自定义bean注入
#meta-object-handler: MyMetaObjectHandler

mybatis-plus.global-config.sql-parser-cache=false
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=true
#Freemarker国际化
spring.freemarker.suffix=.html
spring.freemarker.cache=false
spring.freemarker.content-type=text/html; charset=utf-8
spring.freemarker.template-loader-path=classpath:/
spring.freemarker.settings.auto_import=/spring.ftl as spring
spring.messages.basename=i18n/messages